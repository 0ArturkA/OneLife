This file only list changes to game code.  Changes to content can be found here:

http://onehouronelife.com/updateLog.php



Version 33     ???

--Sub-containers, one-level deep (basket in a cart) now supported.

--Creation sound no longer played with an object moves.

--Fixed so that not just short human-made objects are mouse-through-able, but
  all short objects.  So if you build a wall in front of a rock, you can still
  mouse through to the rock.

--Fixed arm position when other players pick something up.

--Fixed stutter-step of other players during long, continuous movements.

--Optimized sprite drawing code with profiler to increase maximum number of 
  sprites that can be drawn per frame.

--More improvements to the way object center offsets are computed to be used
  for held positions.  Now true visible sprite width (instead of total image
  width) is used, and 90 degree rotations are accounted for.  This fixes the
  held position of the basket of bones, for example, which contains a wide
  sprite that is rotated vertically.

--Fixed pickers in editor to not need to reset results page number when some
  results potentially deleted on another editor screen.  All editor screens
  now hold their picker pages when flipping back and forth between screens.
  Pickers now automatically rewind back past empty results pages.

--Temperature arrow positions now rounded to whole pixels.

--Fixed bug in way objectHeight calculation made use of sprite anchor offsets.

--Fixed so that target fps is chosen from list of possible fps in settings file,
  even if vsync isn't enforcing that fps.

--Pathfinding fixed to prevent walking through a door in your grid square after
  it has been closed in front of you.

--Fixed to prevent click-through of short objects behind short objects 
  (example:  open door that partially overlaps nearby wall, wall should not be
  able to click through door to hit wall).

--Fixed so that camera-settle speed takes FPS into account (before, it took too
  long to settle at lower fps after the player stops moving).

--Fixed so that only one sound plays during a transition, even if something new
  is created in the player's hand and on the ground.  The ground object's
  creation sound takes priority.

--Fixed to avoid clicking on objects during continued, mouse-held-down walking.

--Fixed misclick issue when clicking on objects near the edge of the screen.

--Fixed case where continous walking mode cancelled after mousing over a clump 
  of blocking objects.

--Fixed so that held object can produce heat.  Contained and sub-contained
  objects now can produce heat as well, shielded by the r-value of their
  container.  Items contained in clothing can produce heat, shielded by
  clothing r-value.

--Support for floors.

--Support for extra animation slots (for use in trailer animations).

--Support for live animation triggers in game client (for trailer).

--Fixed other player wiggle direction on first action caused by uninitialized
  value.

--Fixed so that newly-added player doesn't get drawn until all their sprites
  are loaded.

--Eve's camp location only remembered if Eve dies of old age (for that same
  player to spawn there the next time they play Eve).  If Eve dies younger than
  that, that player will respawn in a random location in their next Eve life.
  Repeat suicide is no longer a viable solo player strategy.

--Fixed animation blending when a moving object comes to rest.

--Fixed frozen rotation frame count use in animation editor.

--Drawing grid square highlights when holding something (to show you where it 
  will be put down).

--Fixed youth body position on rideable objects.

--Fixed poor cornering and endless circling at high movement speeds.

--Fixed overshooting at very high movement speeds.  Speed multiplier of 10 is
  now useable, and 20 is borderline useable.

--Support for container slots having a parent sprite so that they move and
  rotate with that parent sprite.

--Fixed creation-sound-playing code that checks if newly created object is a
  sprite-sub-set of the source object so that it allows for global
  transpositions of the sub-sprites (example:  picking up froe from pile of
  boards should not play froe creation sound).

--Fixed display of animation for held object in animation editor.



Server fixes:

--Food log now outputs every hour regardless of whether players are eating at
  the turn of the hour.

--Server can now load a test map from a file that overrides the proc-gen map.

--New Eve placement that tracks most recent camp separately for each player.
  New solo players are placed randomly in the wilderness.  Repeat solo Eves
  are returned to their last camp.

--Food log report includes past month.

--Fixed so that Eve placement radii don't grow beyond 1024 if a player 
  continues to die young repeatedly.  They used to double until 32-bit overflow.





Version 32     2017-August-15

--Fixed assumption that time() returns 32-bit int values (see server fixes
  for details).

--On screens larger than 1920x1080, or if settings/forceBigPointer.ini set,
  double-sized mouse pointer is used.

--New death reason:  Nursing Starvation.

--New noise graphic to draw outside of known map regions during server lag.

--Now all short human-made or human-moveable objects are mouse-able when they
  are covered up by a foreground object. 

--Fixed vertical cross-over point for player feet when walking between cells
  to reduce the appearance of objects passing through their legs.

--Added foot-cross-over guide mark in object editor.

--Added edit-time computation of object pixel heights.  Using this in server 
  natural map generation to avoid placing short objects behind tall objects.

--Fixed animation editor glitches when speed mult < 1.0

--Moving animals.

--Fixed overlap issues for people moving in same cell.

--You can now feed anyone, regardless of age.

--Eating animation and eating sound played when someone is fed.

--Fixed glitches when a moving parent dies while carrying you.

--Support for using non-human-deadly objects at a distance (e.g., for hunting 
  animals).

--Fixed editor crash when testing clothing position.

--Parent/Child buttons in animation editor to make limb animation easier.

--Copy All in animation editor now makes sure destination sprites match source
  sprites during paste.
 
--Clothing now goes into its held animation instead of ground animation when 
  wearer stops moving.

--Support for demo scenery in animation editor so we can test moving object
  foot visibility behind non-blocking objects.

--Added horizontal swap buttons in transition editor.






Server fixes:

--Fixed a typo that was causing a crash.

--Fixed assumption that time() returns 32-bit int values.  In fact, the C 
  standard says nothing about the time_t type.  It is not even safe to
  subtract one time() value from another.  Completely overhauled my time
  implementation to assume nothing beyond what is specified in the C standard,
  now measuring time as a double-precision floating point number of seconds 
  from my own epoch, which fixes the year 2038 problem in a standards-compliant
  way for 285 million years into the future.
  (Note:  the year 2038 problem is only fixed on platforms where the 
   time.h time() function works beyond year 2038... for example NOT 32-bit
   Linux.  On broken platforms, there is no way to measure time beyond 2038.)

--Storing time values in database as 64-bit floats (doubles).  Added a new
  mapTime.db database to support this without doubling the rest of the
  database size (time values are stored in a separate, double-wide database).

--New baby is given to the most well-fed fertile woman on the server (still
  observing the 2-living-child-max rule and bad mother rule). 

--Giving birth now takes 10 out of mother's food supply, with a min remaining 
  food of 4.

--Nursing a baby now transfers food from the mother's store to the baby's
  store.  This adds a new death reason:  Nursing Starvation.  Picking up a
  baby always consumes at least one food, so a good baby will wait until they
  need food before asking.  Nursing is still more efficient than hand-feeding
  because the food transfer fits the baby perfectly (where as a berry has a
  tendency to over-feed, beyond the size of the baby's stomach, thus wasting 
  food).

--Fixed bug that could cause a walking player who dies to appear at their
  destination after death.

--Life stats script now works incrementally only on latest log files.

--Server life log now records parent chain length for each birth.

--Fixed bug in server life log that caused log file to be reopened repeatedly.

--Added hourly food logging support to server.

--Food stats report for website.

--Fixed server-side bug that was causing object creation sounds to sometimes
  play when they are removed from a container.




Version 30     2017-July-28

--Fixed UnixSource build process to not overwrite user's custom settings.

--Fixed socket handling to detect send errors.

--Recording window minimized status (to handle alt-tabbing in recordings).

--LOGIN message is now a fixed length regardless of email address so that
  playback of recordings works on machines with a different email.ini setting.

--Fixed hint-related crash when picking up a baby.

--Added info about what you just ate when you drank breast milk.

--Fixed editor crash when editing an empty category.

--Fixed so that measured, set frame rate is included in recording header
  (recording doesn't start until after frame rate is measured).  This ensures 
  proper playback of games recorded at non-60fps frame rates.

--Fixed two memory leaks.

--When mousing over something dropped behind another object, highlight now
  shows through the blocking object.

--Drop-behind mousability now applies to objects dropped by other players in
  your vacinity, as well as objects changed (but not dropped).  It is limited
  to objects that are less than one tile tall (to prevent annoying click-
  through on trees that are behind other trees).

--Fixed to play useDummy using target sounds (even though target changes).

--Support for reverse-use transitions (example:  putting clay back in clay pit).

--Distinction between lastUse transition for actor and target.

--Support for use-appear sprites in addition to use-vanish sprites (example:
  wear marks on axe).

--Fixed so that mouse highlighting works for objects that are three tiles
  below mouse instead of just two.

--Fixed so that music doesn't drop out for sake of hunger sounds at very end
  of old age life.  There are no audible hunger sounds to interrupt the music
  at that point.

--You can now feed/cloth the elderly (over age 55) just like you can for a
  baby (under age 5).




Server fixes:

--Fixed glitch in reported baby food capacity when baby is fed.

--Changed so that Eve radius only expanded if 10 Eves die under age 16 with no
  Eve living past 20 in the process. 

--Eve placement based on previous object placements now weights objects based
  on their depth in the tech tree.  So more advanced objects count more when
  finding a camp to put Eve into.

--Shrunk default Eve placement radius from 20 down to 2 so finding the camp is
  easier.

--Bad mother problem solved by not giving a mother more babies if they have
  already had more than 10 babies and all of them are already dead.

--Support for server-wide epoch time that can be specified in auto-decay
  transitions with an auto-decay value of -1.  Thus, the epoch time can be
  adjusted with a server setting globally instead of needing to edit all the
  transition times.

--Fixed to avoid randomizing decay time of map objects that are set by players.
  Naturally-occurring objects still have their decay times set randomly the
  first time they are seen (to avoid lock-step with identical objects in the
  same area).  Now fires burn the same duration every time, and ember-making
  isn't so time-finicky.

--Fixed so you cannot put things back into a grave.

--Fixed so that we stop polling a socket once a player dies, even though we 
  keep the socket open to allow them to receive their death message, to avoid
  poll busy-looping on a closed socket in the event of a disconnection.

--Fixed a memory leak if server is quit before connection is closed to a dead
  player.

--Server now has all players look at the map around them periodically to keep
  decaying objects in a live state (so that we keep decay cycling them).
  Before, objects with longer decays would stop transitioning on the player's
  screen while the player was statnding still.




Version 28     2017-July-21     

--Other player action animations no longer interrupt their walking if the 
  action message arrives before we see them finish their walk locally.

--Improved sprite trimming algorithm (used to tile large sprites to reduce
  pixel fill) to eliminate visible seams along tile boundaries by cross-fading
  tiles.

--Changed the way that actions of other players are handled, greatly increasing
  the smoothness of other player's motions and actions.  We now play other
  player's walking paths at our own rate and defer actions that should
  happen at the end of their walk (like picking something up) until after
  our local version of their walk has completed.  This means that the 
  truth as it exists on the server can play back with a time delay locally,
  but it will mesh up better with the walking actions we've received
  from the server (why show them pick something up if we haven't even
  shown them get there yet?  It looks weird, even if it's closer to the truth.
  This means that slightly more often, we'll go to grab an object that
  another player has already grabbed, and our client will know that it has
  been grabbed but won't show it yet because the other player isn't finished
  walking yet.  We'll be surprised when we fail to pick up the object and
  the other player gets it instead.  But this was possible before too,
  due to network latency.  Now we have an additional opportunity for it
  caused by local animation consistency latency.

--Fixed "forever flying" object pick-ups when we walk away after pick-up by
  gradually speeding the object up the longer it has been in the air, so
  it quickly catches up to us as we walk away.

--Fixed potential crash when the player holding you dies.

--Fixed circling forever at end of short paths by going directly toward final
  spot if we detect that too many steps have occurred.

--Pathmarking code now accounts for diagonal path steps.

--Support for making objects that are permanent and drawn behind player without
  blocking walking (e.g., roads).

--Fixed visual round-off errors at high coordinate values by offsetting all
  coordinates from our starting location before using them as to-draw positions
  (32 bit floats cannot represent large coordinates with enough precision).

--Map pull mode now auto-logs-in.

--Death screen now shows age and cause of death.

--Category system in editor to make abstract transitions that apply to a class
  of objects.

--Unix Source bundle now ships as a script that pulls from live source 
  repositories.

--Permanent, non-holdable objects can be food, allowing you to eat from them
  without setting down the tool in your hand.

--Eating food now stacks instead of filling you to a pre-defined per-food 
  maximum.  Eating one berry might fill you up to 4, but eating two in a row
  would fill you up to 8.

--Split ground overlay into 4 1024x1024 tiles to deal with bug in larger mipmap
  generation on some graphics cards.

--NumUses system for objects that auto-generates intermediary objects and 
  transitions.  Example:  a berry bush can have a berry picked from it 10 
  times before becoming empty, and berry sprites can disappear from it along 
  the way.  The intermediary objects are replaced with unused versions of the 
  main object at server shutdown.

--Fixed way object ancestor cycle is detected so that kindling creation sound
  plays when long shaft is chopped into kinding.

--Support for generic use transitions.  Full water bottle can become an empty
  water bottle whenever it is successfully used (no longer have to define
  that it becomes empty in each and every situation).

--Fixed bug in min priority heap implementation that was resulting in
  badly ordered priorities.

--Music fades so that hungry sound can be heard.

--Using sound for target, unchanged object played in case where our held
  object changes (example:  putting clay back into deposit, dumping water back
   in pond).





Server fixes:

--Fixed hiccup in parent animation when we're being carried long distances due
  to unneeded player updates mid-move when we reach a new map chunk.

--Fixed disappearing baby when you click on your clothes when holding a baby.
  (You now cannot remove your clothes while holding a baby.)  Thanks Josh C.

--Reflector now seeds random number generator with your IP address.  Repeat
  suicide and reconnection won't send you to different servers.

--Added sane behavior at actual edges of world instead of letting player walk
  off edge and cause a crash.





Version 27     2017-July-1

--Content update.




Version 26     2017-July-1

--Fixed server crash when baby jumps out of arms.

--Fixed bug in logging age at time of death.L

--Better logging of failed client connections.

--Piano note sound to indicate start of starvation, repeats on last hunger bar.

--Highlighting object under mouse.

--Fixed crash when pathfinding or clicking off edge of known map (in case of 
  server lag).

--Fixed a few uninitialized values found with Valgrind.

--New Eve placement method (random within radius around largest old camp).

--Clicking on empty ground cell containing a blocking object no longer counts
  as a click on that object.  Reduces surprise tree clicks.

--Dropped items that you're standing in front of are no longer clickable 
  through your body.

--Right clicking a holdable object while holding another object causes them
  to swap.  Can easily swap what you're holding with something else.

--Other player's eating sounds now play.

--After dying, upon getting reborn, whole connection process started from 
  scratch.  This insures that you will find out about a backup server if
  the main server has crashed (which may have caused your death).

--Time no longer halts during pause (server messages used to pile up during
  pause and play back all at once with wild results).

--Improved the way clothing R-values are summed, adding a weight for each body 
  part.  A hat is now more important than a shoe, and a really insulating shoe
  cannot make you overheat.

--Changed heat propagation to use eight weighted neighbor cells.

--Reduced number of heat propagation simulation cycles to slow heat changes.

--Mac build now defaults to windowed mode.

--Added code to tell Windows that we are handling our own scaling.

--Fixed game recording on Windows.

--Switched to GL_GENERATE_MIPMAP instead of gluBuild2DMipmaps on platforms
  that support it (gluBuild2DMipmaps was crashing on one particular mac).
