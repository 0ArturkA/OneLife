This file only list changes to game code.  Changes to content can be found here:

http://onehouronelife.com/updateLog.php



Version 30     ???

--Fixed UnixSource build process to not overwrite user's custom settings.

--Fixed socket handling to detect send errors.

--Recording window minimized status (to handle alt-tabbing in recordings).

--LOGIN message is now a fixed length regardless of email address so that
  playback of recordings works on machines with a different email.ini setting.

--Fixed hint-related crash when picking up a baby.

--Added info about what you just ate when you drank breast milk.

--Fixed editor crash when editing an empty category.

--Fixed so that measured, set frame rate is included in recording header
  (recording doesn't start until after frame rate is measured).  This ensures 
  proper playback of games recorded at non-60fps frame rates.

--Fixed two memory leaks.

--When mousing over something dropped behind another object, highlight now
  shows through the blocking object.

--Drop-behind mousability now applies to objects dropped by other players in
  your vacinity, as well as objects changed (but not dropped).  It is limited
  to objects that are less than one tile tall (to prevent annoying click-
  through on trees that are behind other trees).




Server fixes:

--Fixed glitch in reported baby food capacity when baby is fed.

--Changed so that Eve radius only expanded if 10 Eves die under age 16 with no
  Eve living past 20 in the process. 

--Eve placement based on previous object placements now weights objects based
  on their depth in the tech tree.  So more advanced objects count more when
  finding a camp to put Eve into.

--Shrunk default Eve placement radius from 20 down to 2 so finding the camp is
  easier.

--Bad mother problem solved by not giving a mother more babies if they have
  already had more than 10 babies and all of them are already dead.

--Support for server-wide epoch time that can be specified in auto-decay
  transitions with an auto-decay value of -1.  Thus, the epoch time can be
  adjusted with a server setting globally instead of needing to edit all the
  transition times.




Version 28     2017-July-21     

--Other player action animations no longer interrupt their walking if the 
  action message arrives before we see them finish their walk locally.

--Improved sprite trimming algorithm (used to tile large sprites to reduce
  pixel fill) to eliminate visible seams along tile boundaries by cross-fading
  tiles.

--Changed the way that actions of other players are handled, greatly increasing
  the smoothness of other player's motions and actions.  We now play other
  player's walking paths at our own rate and defer actions that should
  happen at the end of their walk (like picking something up) until after
  our local version of their walk has completed.  This means that the 
  truth as it exists on the server can play back with a time delay locally,
  but it will mesh up better with the walking actions we've received
  from the server (why show them pick something up if we haven't even
  shown them get there yet?  It looks weird, even if it's closer to the truth.
  This means that slightly more often, we'll go to grab an object that
  another player has already grabbed, and our client will know that it has
  been grabbed but won't show it yet because the other player isn't finished
  walking yet.  We'll be surprised when we fail to pick up the object and
  the other player gets it instead.  But this was possible before too,
  due to network latency.  Now we have an additional opportunity for it
  caused by local animation consistency latency.

--Fixed "forever flying" object pick-ups when we walk away after pick-up by
  gradually speeding the object up the longer it has been in the air, so
  it quickly catches up to us as we walk away.

--Fixed potential crash when the player holding you dies.

--Fixed circling forever at end of short paths by going directly toward final
  spot if we detect that too many steps have occurred.

--Pathmarking code now accounts for diagonal path steps.

--Support for making objects that are permanent and drawn behind player without
  blocking walking (e.g., roads).

--Fixed visual round-off errors at high coordinate values by offsetting all
  coordinates from our starting location before using them as to-draw positions
  (32 bit floats cannot represent large coordinates with enough precision).

--Map pull mode now auto-logs-in.

--Death screen now shows age and cause of death.

--Category system in editor to make abstract transitions that apply to a class
  of objects.

--Unix Source bundle now ships as a script that pulls from live source 
  repositories.

--Permanent, non-holdable objects can be food, allowing you to eat from them
  without setting down the tool in your hand.

--Eating food now stacks instead of filling you to a pre-defined per-food 
  maximum.  Eating one berry might fill you up to 4, but eating two in a row
  would fill you up to 8.

--Split ground overlay into 4 1024x1024 tiles to deal with bug in larger mipmap
  generation on some graphics cards.

--NumUses system for objects that auto-generates intermediary objects and 
  transitions.  Example:  a berry bush can have a berry picked from it 10 
  times before becoming empty, and berry sprites can disappear from it along 
  the way.  The intermediary objects are replaced with unused versions of the 
  main object at server shutdown.

--Fixed way object ancestor cycle is detected so that kindling creation sound
  plays when long shaft is chopped into kinding.

--Support for generic use transitions.  Full water bottle can become an empty
  water bottle whenever it is successfully used (no longer have to define
  that it becomes empty in each and every situation).

--Fixed bug in min priority heap implementation that was resulting in
  badly ordered priorities.

--Music fades so that hungry sound can be heard.

--Using sound for target, unchanged object played in case where our held
  object changes (example:  putting clay back into deposit, dumping water back
   in pond).





Server fixes:

--Fixed hiccup in parent animation when we're being carried long distances due
  to unneeded player updates mid-move when we reach a new map chunk.

--Fixed disappearing baby when you click on your clothes when holding a baby.
  (You now cannot remove your clothes while holding a baby.)  Thanks Josh C.

--Reflector now seeds random number generator with your IP address.  Repeat
  suicide and reconnection won't send you to different servers.

--Added sane behavior at actual edges of world instead of letting player walk
  off edge and cause a crash.





Version 27     2017-July-1

--Content update.




Version 26     2017-July-1

--Fixed server crash when baby jumps out of arms.

--Fixed bug in logging age at time of death.L

--Better logging of failed client connections.

--Piano note sound to indicate start of starvation, repeats on last hunger bar.

--Highlighting object under mouse.

--Fixed crash when pathfinding or clicking off edge of known map (in case of 
  server lag).

--Fixed a few uninitialized values found with Valgrind.

--New Eve placement method (random within radius around largest old camp).

--Clicking on empty ground cell containing a blocking object no longer counts
  as a click on that object.  Reduces surprise tree clicks.

--Dropped items that you're standing in front of are no longer clickable 
  through your body.

--Right clicking a holdable object while holding another object causes them
  to swap.  Can easily swap what you're holding with something else.

--Other player's eating sounds now play.

--After dying, upon getting reborn, whole connection process started from 
  scratch.  This insures that you will find out about a backup server if
  the main server has crashed (which may have caused your death).

--Time no longer halts during pause (server messages used to pile up during
  pause and play back all at once with wild results).

--Improved the way clothing R-values are summed, adding a weight for each body 
  part.  A hat is now more important than a shoe, and a really insulating shoe
  cannot make you overheat.

--Changed heat propagation to use eight weighted neighbor cells.

--Reduced number of heat propagation simulation cycles to slow heat changes.

--Mac build now defaults to windowed mode.

--Added code to tell Windows that we are handling our own scaling.

--Fixed game recording on Windows.

--Switched to GL_GENERATE_MIPMAP instead of gluBuild2DMipmaps on platforms
  that support it (gluBuild2DMipmaps was crashing on one particular mac).
